{"version":3,"file":"static/js/818.c1661508.chunk.js","mappings":"4aAAO,MAEMA,EAAiBC,GAAUA,EAAMC,QAAQC,Q,sBCMtD,MA2GA,EA3GgBC,KACd,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,KAC9BK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,IAK3CJ,GAAUW,EAAAA,EAAAA,IAAYd,GAetBe,EAAqBC,IACzB,MAAM,KAAEC,GAASD,EAAEE,cACbC,EAAQC,KAAKC,IAAIL,EAAEM,OAAOH,MAAO,GAC9B,SAATF,EAAkBR,EAAYU,GAASR,EAAUQ,EAAM,EAGnDI,EAAoBC,EAAMC,KAAKC,IAAI,CAAQP,MAAOO,EAAMC,MAAOD,MAe/DE,EAbgBC,MACpB,MAIMC,EAAQ,GACd,IAAK,IAAIC,EALO,GAKSA,GAJT,IAI0BA,GAH7B,GAIXD,EAAME,KAAKD,GAGb,OAAOD,CAAK,EAGWD,GAAgBJ,KAAIM,IAAI,CAAOZ,MAAOY,EAAMJ,MAAOI,MAI5E,OACEE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAhCYnB,IACpBA,EAAEoB,iBACFC,QAAQC,IAAI,CAAC9B,WAAUE,SAAQE,eAAcP,eAAa,EA8B3B6B,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAYN,SAAC,eAC5BK,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,GAAG,aACHzB,KAAK,aACL0B,QAASpB,EACTqB,cAAY,EACZC,YAXgB,iBAYhBC,SAAW9B,GAAMH,EAAgBG,EAAIA,EAAEG,MAAQ,OAEjDoB,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,YAAWN,SAAC,mBAC3BK,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,GAAG,YACHzB,KAAK,YACL0B,QAASf,EACTgB,cAAc,EACdC,YAAY,OACZ1B,MACkB,KAAhBd,EACI,CACEc,MAAOd,EACPsB,MAAM,MAADoB,OAAQ1C,EAAW,MAE1B,GAENyC,SAAW9B,GAAMV,EAAeU,EAAIA,EAAEG,MAAQ,OAEhDoB,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAYN,SAAC,2BAC5BK,EAAAA,EAAAA,KAAA,QAAMS,UAAU,eAAcd,SAAC,UAC/BK,EAAAA,EAAAA,KAAA,SACEG,GAAG,aACHO,KAAK,SACLhC,KAAK,OACL6B,SAAU/B,KAEZwB,EAAAA,EAAAA,KAAA,QAAMS,UAAU,eAAcd,SAAC,QAC/BK,EAAAA,EAAAA,KAAA,SACEG,GAAG,aACHO,KAAK,SACLhC,KAAK,KACL6B,SAAU/B,KAEZwB,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAAQf,SAAC,eAGxBK,EAAAA,EAAAA,KAAA,OAAAL,UACEK,EAAAA,EAAAA,KAAA,MAAAL,SACI/B,EAASsB,KAAKyB,IACPX,EAAAA,EAAAA,KAAA,MAAoBW,OAAQA,GAAnBA,EAAOR,YAIzB,ECpGV,EARoBS,KAEhBZ,EAAAA,EAAAA,KAAA,OAAAL,UACEK,EAAAA,EAAAA,KAACnC,EAAO,K","sources":["redux/selectors.js","components/Catalog/Catalog.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["export const selectFavorites = (state) => state.favorite.favorites;\n\nexport const selectAdverts = (state) => state.catalog.adverts;\nexport const selectAllAdverts = (state) => state.catalog.allAdverts;\nexport const selectIsLoading = (state) => state.catalog.isLoading;\nexport const selectError = (state) => state.catalog.error;\nexport const selectPage = (state) => state.catalog.page;","import React, {useState } from 'react';\nimport makes from \"./makes.json\";\nimport Select from 'react-select';\nimport {\n  selectAdverts,\n} from \"../../redux/selectors\";\nimport { useSelector } from \"react-redux\";\n\nconst Catalog = () => {\n  const [selectPrice, setSelectPrice] = useState('');\n  const [fromMile, setFromMile] = useState('');\n  const [toMile, setToMile] = useState('');\n  const [selectFilter, setSelectFilter] = useState('');\n  // const dispatch = useDispatch();\n\n  // const isLoading = useSelector(selectIsLoading);\n  // const page = useSelector(selectPage);\n  const adverts = useSelector(selectAdverts);\n  // const allAdverts = useSelector(selectAllAdverts);\n\n  // useEffect(() => {\n  //   if (adverts.length === 0) {\n  //     dispatch(setAllAdverts());\n  //     dispatch(setAdverts(page));\n  //   }\n  // }, [adverts.length, dispatch, page]);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log({fromMile, toMile, selectFilter, selectPrice})\n  }\n\n  const handleInputChange = (e) => {\n    const { name } = e.currentTarget;\n    const value = Math.max(e.target.value, 0);\n    name === \"from\" ? setFromMile(value) : setToMile(value);\n  };\n\n  const optionsMakeFilter = makes.map((make) => ({ value: make, label: make }));\n\n  const generatePrice = () => {\n    const minRate = 10;\n    const maxRate = 300;\n    const step = 10;\n    \n    const rates = [];\n    for (let rate = minRate; rate <= maxRate; rate += step) {\n      rates.push(rate);\n    }\n\n    return rates;\n  };\n\n  const optionsMakePrice = generatePrice().map(rate => ({ value: rate, label: rate }));\n\n  const placeholderText = \"Enter the text\";\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"makeFilter\">Car brand</label>\n        <Select\n          id=\"makeFilter\"\n          name=\"makeFilter\"\n          options={optionsMakeFilter}\n          isSearchable\n          placeholder={placeholderText}\n          onChange={(e) => setSelectFilter(e ? e.value : \"\")}\n        />\n        <label htmlFor=\"makePrice\">Price/ 1 hour</label>\n        <Select\n          id=\"makePrice\"\n          name=\"makePrice\"\n          options={optionsMakePrice}\n          isSearchable={false}\n          placeholder='To $'\n          value={\n            selectPrice !== ''\n              ? {\n                  value: selectPrice,\n                  label: `To ${selectPrice}$`,\n                }\n              : ''\n          }\n          onChange={(e) => setSelectPrice(e ? e.value : \"\")}\n        />\n        <label htmlFor=\"carMileage\">Ð¡ar mileage / km</label>\n        <span className=\"input-prefix\">From</span>\n        <input\n          id=\"carMileage\"\n          type=\"number\"\n          name=\"from\"\n          onChange={handleInputChange}\n        />\n        <span className=\"input-prefix\">To</span>\n        <input\n          id=\"carMileage\"\n          type=\"number\"\n          name=\"to\"\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <div>\n        <ul>\n          {(adverts).map((advert) => {\n            return <li key={advert.id} advert={advert}/>;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Catalog;\n","import React from 'react'\nimport Catalog from '../../components/Catalog/Catalog'\n\nconst CatalogPage = () => {\n  return (\n    <div>\n      <Catalog/>\n    </div>\n  )\n}\n\nexport default CatalogPage"],"names":["selectAdverts","state","catalog","adverts","Catalog","selectPrice","setSelectPrice","useState","fromMile","setFromMile","toMile","setToMile","selectFilter","setSelectFilter","useSelector","handleInputChange","e","name","currentTarget","value","Math","max","target","optionsMakeFilter","makes","map","make","label","optionsMakePrice","generatePrice","rates","rate","push","_jsxs","children","onSubmit","preventDefault","console","log","_jsx","htmlFor","Select","id","options","isSearchable","placeholder","onChange","concat","className","type","advert","CatalogPage"],"sourceRoot":""}